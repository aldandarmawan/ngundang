---
import "@fontsource-variable/alegreya";
import "@fontsource/great-vibes";
import "@fontsource/love-ya-like-a-sister";
import "../styles/global.css";

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<!-- <meta name="generator" content={Astro.generator} /> -->
		<!-- <meta name="generator"  /> -->
		<title>{title}</title>
		<style>
			.noscroll {
				height: 100%;
				overflow: hidden;
			}
		</style>
	</head>
	<body>
		<audio id="backgroundAudio" loop muted>
			<source src="canon.mp3" type="audio/mpeg" />
			<p>
				if you're seeing this it means your browser doesn't support
				audio. please use latest & modern browser for maximum
				experience.
			</p>
		</audio>
		<div id="falling-leaf"></div>
		<div class="ngundang-container">
			<slot />
		</div>
	</body>
	<!-- <script>
		import { gsap } from "gsap";
		import { ScrollTrigger } from "gsap/ScrollTrigger";
		import { ScrollToPlugin } from "gsap/ScrollToPlugin";

		gsap.registerPlugin(ScrollTrigger);
		gsap.registerPlugin(ScrollToPlugin);

		let sections = document.querySelectorAll(".section");
		let scrollAmount = window.innerHeight;

		function scrollToPage(pageIndex: number) {
			// return;
			let _sect = sections[pageIndex] as any;
			gsap.to(window, {
				scrollTo: {
					y: _sect.offsetTop,
					autoKill: false,
				},
				ease: "power2.inOut",
				duration: 2,
			});
		}

		const currentScrollTop = window.pageYOffset;
		let currentPage = Math.floor(currentScrollTop / scrollAmount);
		let lastScrollTime = 0;

		window.addEventListener("wheel", (ev) => {
			if (
				!(
					ev.ctrlKey === false &&
					ev.altKey === false &&
					ev.shiftKey === false
				)
			) {
				ev.preventDefault();
				return;
			}
			const currentTime = Date.now();

			if (currentTime - lastScrollTime < 500) return;
			lastScrollTime = currentTime;

			// Scroll down
			if (ev.deltaY > 0 && currentPage < sections.length - 1) {
				scrollToPage(++currentPage);
			}

			// Scroll up
			if (!(ev.deltaY > 0) && currentPage > 0) {
				scrollToPage(--currentPage);
			}

		});

		let touchStartY = 0,
			touchEndY = 0;
		window.addEventListener("touchstart", (ev) => {
			touchStartY = ev.touches[0].clientY;
		});

		window.addEventListener("touchend", (ev) => {
			touchEndY = ev.changedTouches[0].clientY;

			if (!(Math.abs(touchEndY - touchStartY) > 50)) {
				return;
			}

			let deltaY = touchStartY - touchEndY;
			// Scroll down
			if (deltaY > 0 && currentPage < sections.length - 1) {
				scrollToPage(++currentPage);
			}

			// Scroll up
			if (!(deltaY > 0) && currentPage > 0) {
				scrollToPage(--currentPage);
			}
		});

		const btnOpenInvitation = document.querySelector("#btnOpenInvitation");
		btnOpenInvitation?.addEventListener("click", () => {
			currentPage = 1;
			scrollToPage(currentPage);
		});
	</script> -->

	<script>
		let isOpened = false;
		import { gsap } from "gsap";
		import { ScrollToPlugin } from "gsap/ScrollToPlugin";
		gsap.registerPlugin(ScrollToPlugin);

		const sections = document.querySelectorAll(".section");
		const btnOpenInvitation = document.querySelector("#btnOpenInvitation");
		const audio = document.getElementById(
			"backgroundAudio",
		) as HTMLAudioElement | null;

		btnOpenInvitation?.addEventListener("click", () => {
			isOpened = true;
			initIsInvitationOpened();
			scrollToPage(1);

			if (!!audio && audio.paused) {
				audio.play();

				if (audio.muted) {
					audio.muted = false;
				}
			}
		});

		window.onload = initIsInvitationOpened;

		function initIsInvitationOpened() {
			if (isOpened) {
				document.body.classList.remove("noscroll");
			} else {
				scrollToPage(0);
				document.body.classList.add("noscroll");
			}
		}

		async function scrollToPage(pageIndex: number) {
			// return;
			let _sect = sections[pageIndex] as any;
			await gsap.to(window, {
				scrollTo: {
					y: _sect.offsetTop,
					autoKill: false,
				},
				ease: "power2.inOut",
				duration: 2,
			});
		}
	</script>
	<script>
		import BG from "../assets/bg.gif";
		const randWidth = () => {
				return Math.random() * 64 + 32;
			},
			randPos = () => {
				return `${Math.random() * 90}vw`;
			},
			randRot = () => {
				return Math.random() * 360;
			},
			randOp = () => {
				return Math.random() * 0.8 + 0.2;
			};
		import { gsap } from "gsap";
		let bgTl = gsap.timeline({
			repeat: -1,
			repeatDelay: 0,
			// repeatRefresh: true,
		});

		const viewportWidth = window.innerWidth;
		let maxLeaves = viewportWidth / 50;
		let numLeaves = Math.round(
			0.3 * maxLeaves + 0.7 * maxLeaves * Math.random(),
		);
		for (let i = 0; i < numLeaves; i++) {
			let _el = document.getElementById("falling-leaf");
			let _im = document.createElement("img");
			_im.setAttribute("src", BG.src);
			_im.setAttribute("class", "falling-leaf");
			_im.setAttribute("id", `falling-leaf-${i}`);
			_el?.appendChild(_im);
			let width = randWidth(),
				x = randPos(),
				op = randOp();
			bgTl.fromTo(
				`#falling-leaf-${i}`,
				{
					width: width,
					x: x,
					y: -100,
					opacity: op,
					rotation: randRot(),
				},
				{
					duration: 2 + Math.random() * 5,
					ease: "none",
					width: width,
					x: x,
					y: "100vh",
					opacity: op,
					rotation: randRot(),
				},
				Math.random() * 15,
			);
		}
	</script>
</html>
